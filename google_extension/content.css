@import url('https://fonts.googleapis.com/css2?family=Sigmar&display=swap');
* {
  
}
/* make a container whose position is absolute, and placed in the center of the page */
/* this container has a animation that make it slowly slide down from the top of the page */
.keyStoreContainer {
    position: fixed ;
    top : 30px;
    z-index: 5000;
    left: 50%;
    width: 80%;
    max-width: 500px;
    transform: translate(-50%, 0);

    backdrop-filter: blur(0px); background-color: rgba(255, 255, 255, 0.9); border-radius: 20px; box-shadow: 0px 35px 68px 0px rgba(200, 201, 192, 0.5), inset 0px -1px 16px 0px rgba(200, 201, 192, 0.6), inset 0px 11px 28px 0px rgb(255, 255, 255);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 1.2em;
}

/* connect button */
.connectContainer {
    position: relative;
    margin-top: 20px;
    margin-left: auto;
    margin-right: auto;
    width: 50%;
}
.connectContainer button {
    width: 100%;
    position: relative;
    cursor: pointer;
    height: 35px;
    border-radius: 30px;
    background-color: white;
    border: 1px #757575 solid;
    overflow: hidden;
    font-size: 17px;
    font-weight: 700;
    transition: all 0.3s ease-in-out;
}
.connectContainer button:hover {
    background-color: #7e7e7e;
    color :whitesmoke;
}
.connectContainer button:active {
    background-color: #7e7e7e;
    color :whitesmoke;
}
#connectBtnText{
    margin-right: 10px;
    margin-left: 10px;
}
/* connect button */ 
  
/* close button */
.closeBTNContainer{
    position: absolute;
    right: 10px;
    top: 10px;
    
}
.closeBTN {

  padding: 0px;
    text-decoration: none;
    background: transparent;
    box-shadow: none;
    border: none;
    box-sizing: border-box;
    cursor: pointer;
    width: 30px;
    height:30px;
    position: relative;
    border: 1px solid #FFF;
    border-radius: 50%;
    &:before,
    &:after {
        content: "";
        position: absolute;
        width: 80%;
        height: 2px;
        background-color: #000000;
        transition: 0.3s ease-out;
        left: 50%;
        top: 50%;
    }
    &:after {
        transform: translate(-50%, -50%) rotate(45deg);
    }
    &:before {
        transform: translate(-50%, -50%) rotate(-45deg);
    }
    &:hover,
    &:focus {
        &:before,
        &:after {
        transform: translate(-50%, -50%) rotate(180deg);
        }
    }
}
/* close button */

/* shrinkBTN button */
.shrinkBTNContainer{
  position: absolute;
  left: 13px;
  top: 13px;
  
}
.shrinkBTN {
  background-color: white;
  border: none;

  padding: 0px;
  width: 20px;
  height:20px;
  transition: all 0.3s ease-in-out;
  &:hover {
    transform: scale(1);
  }
}
/* close button */
/* titile */
@keyframes blinkCursor {
    50% {
      border-right-color: transparent;
    }
  }
  
  @keyframes typeAndDelete {
    0%,
    10% {
      width: 0;
    }
    45%,
    55% {
      width: 100%;
    } /* adjust width based on content */
    90%,
    100% {
      width: 0;
    }
  }
  
  .terminalContainer {

    background-color: rgba(190, 190, 190, 0.1);
    color: #000000;
    font-family: "Courier New", Courier, monospace;
    font-size: 1em;
    margin-top: 10px;
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
    text-align: center;
  }
  
  
  
  .terminalContainer .text {
    display: inline-block;
    white-space: nowrap;
    overflow: hidden;
   
    animation: typeAndDelete 4s steps(11) infinite,
      blinkCursor 0.5s step-end infinite alternate;
    margin-top: 1.5em;
  }
  
/* titile */


/* mainArea */
.mainArea {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-top: 20px;
    padding-bottom: 20px;
}
/* btns */
.mainArea .button {
  margin-top: 20px;
    border: 1px #757575 solid;
    font-size: 20px;
    background: rgb(255, 255, 255);
    color: rgb(0, 0, 0);
    padding: 0.7em 1em;
    padding-left: 0.9em;
    display: flex;
    align-items: center;
    
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.2s;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
  }
  .mainArea .button:disabled {
    cursor: not-allowed;
    background: #ffffff;
    color: black;
  }
  .mainArea .button span {
    display: block;
    margin-left: 0.3em;
    transition: all 0.3s ease-in-out;
  }
  
  .mainArea .button svg {
    display: block;
    transform-origin: center center;
    transition: transform 0.3s ease-in-out;
  }
  .mainArea .button:disabled {
    cursor: not-allowed;

  }
  
  .mainArea .button:hover .svg-wrapper-1 .svg-wrapper {
    animation: fly-1 0.6s ease-in-out infinite alternate;
  }
  .mainArea .button:disabled:hover .svg-wrapper-1 .svg-wrapper {
    animation: none ;
  }
  .mainArea .button:hover .svg-wrapper-1 svg {
    transform: translateX(1.3em) rotate(45deg) scale(1.1);
  }
  .mainArea .button:disabled:hover .svg-wrapper-1 svg {
    transform: none;
  }
  .mainArea .button:hover .svg-wrapper-2 .svg-wrapper {
    animation: none;
  }
  .mainArea .button:hover .svg-wrapper-2 svg {
    transform: translateX(1.9em) rotate(360deg) scale(1.1);
  }
  
  .mainArea .button:hover span {
    transform: translateX(5em);
  }
  .mainArea .button:disabled:hover span {
    transform: none;
  }
  .mainArea .button:hover {
    background: #7e7e7e;
    color: white;
  }
  .mainArea .button:disabled:hover {
    background: #ffffff;
    color: black;
  }
  .mainArea .button:active {
    transform: scale(0.95);
  }
  .mainArea .button:disabled:active {
    transform: none;
  }
  
  @keyframes fly-1 {
    from {
      transform: translateY(0.1em);
    }
  
    to {
      transform: translateY(-0.1em);
    }
  }
  /* btns */
  /* inputs */
  .mainArea .input {
    margin-top: 20px;
    border: none;
    outline: none;
    border-radius: 15px;
    padding: 1em;
    background-color: #757575;
    color: white;
    transition: all 0.3s ease-in-out;
  }
  .mainArea .input::placeholder {
    color: white;
    transition: all 0.3s ease-in-out;
  }
  
  .mainArea .input:focus {
    background-color: white;
    transform: scale(1.05);
    box-shadow: 13px 13px 100px #969696,
               -13px -13px 100px #ffffff;
    color: #757575;
    
  }
  .mainArea .input:focus::placeholder {
    color: #757575;
  }
  /* inputs */

  /* loader */
  .mainArea .loader {
    width: 70px;
    height: 35px;
    position: relative;
    overflow: hidden;
  }
  .mainArea .loader:before {
    content: "";
    width: 70px;
    height: 70px;
    position: absolute;
    left: 0;
    top: 0;
    border: 5px solid #757575;
    border-color: #757575 #757575 #ffffff #ffffff;
    border-radius: 50%;
    box-sizing: border-box;
    animation: rotate 3s ease-in-out infinite;
    transform: rotate(-200deg);
  }
  @keyframes rotate {
    0% {
      border-width: 10px;
    }
    25% {
      border-width: 3px;
    }
    50% {
      transform: rotate(115deg);
      border-width: 10px;
    }
    75% {
      border-width: 3px;
    }
    100% {
      border-width: 10px;
    }
  }
      
  /* loader */

  /* success */
  .mainArea .success-animation { margin-top: 0px;}

  .success-animation .checkmark {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    display: block;
    stroke-width: 2;
    stroke: #4bb71b;
    stroke-miterlimit: 10;
    box-shadow: inset 0px 0px 0px #4bb71b;
    animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both;
    position:relative;
  
   margin: 0 auto;
}
.checkmark .checkmark__circle {
    stroke-dasharray: 166;
    stroke-dashoffset: 166;
    stroke-width: 2;
    stroke-miterlimit: 10;
    stroke: #4bb71b;
    fill: #fff;
    animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
 
}

.checkmark .checkmark__check {
    transform-origin: 50% 50%;
    stroke-dasharray: 48;
    stroke-dashoffset: 48;
    animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
}

@keyframes stroke {
    100% {
        stroke-dashoffset: 0;
    }
}

@keyframes scale {
    0%, 100% {
        transform: none;
    }

    50% {
        transform: scale3d(1.1, 1.1, 1);
    }
}

@keyframes fill {
    100% {
        box-shadow: inset 0px 0px 0px 30px #4bb71b;
    }
}

.copyArea {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
  margin-bottom: 20px;
  color:#757575;
  text-transform:uppercase;
  font-size:30px;
  font-family: 'Sigmar', cursive;
  line-height:1;
}

.copyyy {
  /* button */
  --button-bg: #ffffff;
  --button-hover-bg: #dcdcdc;
  --button-text-color: #7a7a7a;
  --button-hover-text-color: #4bb71b;
  --button-border-radius: 10px;
  --button-diameter: 36px;
  --button-outline-width: 1px;
  --button-outline-color: rgb(141, 141, 141);
  /* tooltip */
  --tooltip-bg: #f4f3f3;
  --toolptip-border-radius: 4px;
  --tooltip-font-family: Menlo, Roboto Mono, monospace;
  /* ðŸ‘† this field should not be empty */
  --tooltip-font-size: 12px;
  /* ðŸ‘† this field should not be empty */
  --tootip-text-color: rgb(50, 50, 50);
  --tooltip-padding-x: 7px;
  --tooltip-padding-y: 7px;
  --tooltip-offset: 8px;
  /* --tooltip-transition-duration: 0.3s; */
  /* ðŸ‘† if you need a transition, 
  just remove the comment,
  but I didn't like the transition :| */
}

.copyyy {
  box-sizing: border-box;
  width: var(--button-diameter);
  height: var(--button-diameter);
  border-radius: var(--button-border-radius);
  background-color: var(--button-bg);
  color: var(--button-text-color);
  border: none;
  cursor: pointer;
  position: relative;
  outline: none;
  margin-left: 10px;
}

.tooltippp {
  position: absolute;
  opacity: 0;
  visibility: 0;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  font: var(--tooltip-font-size) var(--tooltip-font-family);
  color: var(--tootip-text-color);
  background: var(--tooltip-bg);
  padding: var(--tooltip-padding-y) var(--tooltip-padding-x);
  border-radius: var(--toolptip-border-radius);
  pointer-events: none;
  transition: all var(--tooltip-transition-duration) cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.tooltippp::before {
  content: attr(data-text-initial);
}

.tooltippp::after {
  content: "";
  position: absolute;
  bottom: calc(var(--tooltip-padding-y) / 2 * -1);
  width: var(--tooltip-padding-y);
  height: var(--tooltip-padding-y);
  background: inherit;
  left: 50%;
  transform: translateX(-50%) rotate(45deg);
  z-index: -999;
  pointer-events: none;
}

.copyyy svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.checkmarkkk {
  display: none;
}

/* actions */

.copyyy:hover .tooltippp,
.copyyy:focus:not(:focus-visible) .tooltippp {
  opacity: 1;
  visibility: visible;
  top: calc((100% + var(--tooltip-offset)) * -1);
}

.copyyy:focus:not(:focus-visible) .tooltippp::before {
  content: attr(data-text-end);
}

.copyyy:focus:not(:focus-visible) .clipboard {
  display: none;
}

.copyyy:focus:not(:focus-visible) .checkmarkkk {
  display: block;
}

.copyyy:hover,
.copyyy:focus {
  background-color: var(--button-hover-bg);
}

.copyyy:active {
  outline: var(--button-outline-width) solid var(--button-outline-color);
}

.copyyy:hover svg {
  color: var(--button-hover-text-color);
}
  /* success */
  /* mainArea */